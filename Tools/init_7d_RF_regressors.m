function [regressors] = init_7d_RF_regressors(D, dim, Sigma_rbf, Sigma_n, Sigma_f)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% THIS FUNCTION RETURN A STURCTURE CONTAINING 7 INCREMENTAL CHOLESKY 
% REGRESSORS, ONE FOR EACH JOINT. 
%
% Input: - D              : (int) Dimension of feature space
%        - dim            : (int) Dimension of the data for the model
%        - Sigma_rbf      : (double) Lengthscale of RBF kernel
%        - Sigma_n        : (double) Noise added to Gram Matrix 
%        - Sigma_f        : (double) Scaling of RBF kernel
%
%
% Ouput: - regressors     : (struct) Structure containing all 7 regressors
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
myGPR1 = RF_GPRegressor(D, dim, Sigma_rbf, Sigma_n, Sigma_f);
myGPR2 = RF_GPRegressor(D, dim, Sigma_rbf, Sigma_n, Sigma_f);
myGPR3 = RF_GPRegressor(D, dim, Sigma_rbf, Sigma_n, Sigma_f);
myGPR4 = RF_GPRegressor(D, dim, Sigma_rbf, Sigma_n, Sigma_f);
myGPR5 = RF_GPRegressor(D, dim, Sigma_rbf, Sigma_n, Sigma_f);
myGPR6 = RF_GPRegressor(D, dim, Sigma_rbf, Sigma_n, Sigma_f);
myGPR7 = RF_GPRegressor(D, dim, Sigma_rbf, Sigma_n, Sigma_f);

regressors = struct;
regressors.joint1_regressor = myGPR1;
regressors.joint2_regressor = myGPR2;
regressors.joint3_regressor = myGPR3;
regressors.joint4_regressor = myGPR4;
regressors.joint5_regressor = myGPR5;
regressors.joint6_regressor = myGPR6;
regressors.joint7_regressor = myGPR7;

end