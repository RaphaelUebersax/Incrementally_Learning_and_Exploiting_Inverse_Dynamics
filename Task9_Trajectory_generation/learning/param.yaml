# BASE PARAMETERS

# Directories
# savePath: "/home/lasa/sthith/InvDyn_Learning/recorded_data/session_Mini"   # path of data (on which you wish to learn)
savePath: 'C:/Users/leahp/Documents/EPFL/EPFL-Master 3/Robotics Project 2/Incrementally_Learning_and_Exploiting_Inverse_Dynamics/Task9_Trajectory_generation/ANN_Full'    # path of data (on which you wish to learn)
learntModelLoc: 'C:/Users/leahp/Documents/EPFL/EPFL-Master 3/Robotics Project 2/Incrementally_Learning_and_Exploiting_Inverse_Dynamics/Task9_Trajectory_generation/ANN_Full'              # where to save the learnt models
                                                                              # Same location also used to source models during separate testing


# General Parameters
totalJoints: 7
learnErrorModel: false   # False <-> Torque Models; True <-> Error Models
crossValFoldCount: 10   # Folds for cross-validation on the training dataset

startModelIndex: 0      # For cross-validation/ training/ testing of specific joint models, 
endModelIndex: 7        # specify start and end indices OR set to 0 and (# of joints)
                        # Not applicable to ANN_Coupled (since it always trains a single model)
#-----------------------------------------------

# FOR NUSVR (thundersvm implementation)
testFoldSize: 10000     # Number of data entries in each fold for the test set 
                        # Number of folds determined automatically
                        # for session18 = 10000

nu: 0.1                 

# C and Gamma values to run gridsearch on
# gridSearchCList: [0.1, 1, 10, 100, 1000]                  
# gridSearchGammaList: [0.01, 0.1, 1, 10, 100, 1000, 10000] 
gridSearchCList: [1]                  
gridSearchGammaList: [0.01, 0.1, 1, 10, 100, 1000, 10000] 

# Joint-wise best performing combinations of C and Gamma (tuned hyperparameters)
tunedCList: [10.0, 1000.0, 1000.0, 100.0, 1.0, 10.0, 1.0] 
tunedGammaList: [0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1]

# Parameters to specify SVM parameters
process: 4              # Use SVM for - nuSVR
# process: 3              # Use SVM for - eSVR
kernel: 2               # SVM Kernel  - RBF
epsilon: 0.1            # not being used currently
error: 0.001            # termination condition during training
nu: 0.1                 # nu for nuSVR
#-----------------------------------------------

# FOR ANN (PyTorch implementation)
# Learning rate, Hidden layer count and Neurons per layer values to run gridsearch on

# etaGrid: [0.01]
# etaGrid: [0.05]
etaGrid: [0.05]
hiddenLayerGrid: [2]
hiddenNeuronGrid: [50, 100, 200, 400, 500]


# Tuned values for ANN_coupled
etaCoupled: 0.01
layersCoupled: 2
neuronsCoupled: 500


# # For mini MICE
# # For Error model
# etaCoupled: 0.01
# layersCoupled: 2
# neuronsCoupled: 450
# # For Full model
# etaCoupled: 0.01
# layersCoupled: 2
# neuronsCoupled: 500

# # For big MICE
# # For Error model
# etaCoupled: 0.1
# layersCoupled: 2
# neuronsCoupled: 500
# # For Full model
# etaCoupled: 0.01
# layersCoupled: 2
# neuronsCoupled: 500

# # For sinusoid
# # For Full model
# etaCoupled: 0.05
# layersCoupled: 3
# neuronsCoupled: 25


# Tuned joint-wise values for ANN_decoupled
etaDecoupled: [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
layersDecoupled: [3, 3, 3, 3, 3, 3, 3]
neuronsDecoupled: [250, 250, 250, 250, 250, 250, 250]
#-----------------------------------------------

# FOR LEAST SQUARES REGRESSION (scikit implementatin)
linkCount: 10           # Dependant on robot URDF 
linkParam: 10           # Usually 10, more if friction terms explicitly modelled
                        # [m lx ly lz Ixx Ixy Ixz Iyy Iyz Izz]

zeroParamCount: 29      # Due to usage of 'fixed' links, physical parameters of
                        # the first links don't affect the dynamics. Here, the 
                        # first 29 parameters don't have any effect.
                        # Set to 0 if not required

# NOTE: Manually enter the physical parameters of the robot (wrt CAD data) 
#       in LSR/LSROptimisation.py, line 74 onwards

# Exernal bounds placed on physical parameters' optimisation (wrt original CAD data)
# bounded: "absolute"
bounded: "50%"
# bounded: "25%"
#-----------------------------------------------