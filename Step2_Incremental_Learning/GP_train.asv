function [K, Kinv] = GP_train(X, Sigma_n, Sigma_rbf)

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% This function trains a Gaussian Process Regression on the training data
%
% Inputs: - X:        (MxP) Matrix containing M datapoints of dimension P
%         - Sigma_n   (double) Hyperparameters of GP, noise estimate
%         - Sigma_rbf (double) Lengthscale of the RBF kernel
%
% Outputs: - K:      (MxM) Gram Matrix
%          - Kinv:   (MxM) Inverse of (K+Sigma_n^2 *I)
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Compute the Gram Matrix
n=size(X,1);
nms = sum(X'.^2);
K = exp(1/(2*Sigma_rbf)*(-nms'*ones(1,n) -ones(n,1)*nms + 2*X*X'));


end